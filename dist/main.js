/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function() {

eval("console.log(\"Webpack is working!\");\n\n// test webpack working, manipulate html element\n// document.querySelectorAll(\"ul.works > li\").forEach( element => {\n//     element.style.color = \"red\";\n// });\n\n// testing The Met API link up\n// const id = \"bcb83c4b54aee8418983c2aff3073b3b\";\n// const city = \"London,UK\";\n\n// GET /public/collection/v1/objects : returns a listing of all valid Object IDs available to use\n// 487401 objects\n// public/collection/v1/objects/437133 : returns a specific object at the object id (ex. 437133, \"Garden at Sainte-Adresse\" by Claude Monet) \n\n// Search by criteria\n// returns an array of object IDs that match criteria\n// could use object ID to get at fields, and then iterate through each object, collect that info from each object\n// fetch(`https://collectionapi.metmuseum.org/public/collection/v1/search?isHighlight=true&dateBegin=1800&dateEnd=1899&q=*`)\n//   .then(response => {\n//     if (response.ok) {\n//       return response.json();\n//     } else {\n//       throw new Error(response);\n//     }\n//   })\n//   .then(\n//     data => {\n//       console.log(\"Success!\");\n//       console.log(data);\n//     },\n//     errorResponse => {\n//       console.log(\"Failure!\");\n//       console.log(errorResponse);\n//     }\n//   );\n\n// function to save data from fetch\nfunction collectData(data) {\n  return data;\n}\n\n// dataset = fetch(`https://collectionapi.metmuseum.org/public/collection/v1/search?isHighlight=true&dateBegin=${dateBegin}&dateEnd=${dateEnd}&q=*`)\n//   .then(response => {\n//     if (response.ok) {\n//       return response.json();\n//     } else {\n//       throw new Error(response);\n//     }\n//   })\n//   .then(\n//     data => {\n//       console.log(\"Success!\");\n//       console.log(data);\n//     //   console.log(data[\"objectIDs\"]);\n//       set = [...data[\"objectIDs\"]];\n//       console.log(\"this is dataset\");\n//       console.log(set, \"hello\");\n//       return collectData(set);\n//     },\n//     errorResponse => {\n//       console.log(\"Failure!\");\n//       console.log(errorResponse);\n//     }\n//   );\n\n// Fetch for time period and isHighlight\nconst dateBegin = \"1800\";\nconst dateEnd = \"1899\";\nlet dataset;\nlet artists = {};\nfunction addToArtists(object, artist) {\n  if (!object[artist]) {\n    object[artist] = 1;\n  } else {\n    object[artist] += 1;\n  }\n  return object;\n}\nlet sum = 0;\ndataset = fetch(`https://collectionapi.metmuseum.org/public/collection/v1/search?isHighlight=true&dateBegin=${dateBegin}&dateEnd=${dateEnd}&q=*`).then(response => {\n  if (response.ok) {\n    return response.json();\n  } else {\n    throw new Error(response);\n  }\n}).then(data => {\n  console.log(\"Success!\");\n  console.log(data);\n  //   console.log(data[\"objectIDs\"]);\n  set = [...data[\"objectIDs\"]];\n  console.log(\"this is dataset\");\n  return collectData(set);\n}, errorResponse => {\n  console.log(\"Failure!\");\n  console.log(errorResponse);\n}).then(data => {\n  data.forEach((element, idx) => {\n    //if (idx < 10) {\n    fetch(`https://collectionapi.metmuseum.org/public/collection/v1/objects/${element}`).then(response => {\n      console.log(\"here\");\n      return response.json();\n    }).then(response => {\n      // console.log(\"here2\");\n      // console.log(response, idx);\n      // console.log(response.artistDisplayName);\n      addToArtists(artists, response.artistDisplayName);\n      if (idx === data.length - 1) {\n        console.log(artists, \"artists\");\n        Object.values(artists).forEach(ele => {\n          sum += ele;\n        });\n        console.log(sum, \"sum\");\n        let arr = Object.entries(artists).slice();\n        arr.sort((a, b) => b[1] - a[1]);\n        console.log(arr.slice(0, 14));\n      }\n    });\n    //}\n  });\n  return artists;\n}).then(response => {\n  // Object.values(artists).forEach(ele => {\n  //     sum += ele;\n  // })\n  // console.log(sum, \"sum\");\n});\n\n// Search option, search by category\n// search by (title, artist, year,Â material, tag)\n\n// View for each time period:\n// Show % highlights among total number of works \n//  - pie chart for this with % highlights vs. non highlights (show specific numbers in hover description)\n\n// Show top artists (artists with the most works)\n//  - collect all object ids that fall within a certain time period, then iterate through those \n// Show % of regions represented \n// Show makeup of Years of Accession\n// Show top tags \n// - could use the search query to search tags//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc19wcm9qZWN0Ly4vc3JjL2luZGV4LnNjc3M/OTc0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./src/index.js"](0, {}, __webpack_require__);
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.scss"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;